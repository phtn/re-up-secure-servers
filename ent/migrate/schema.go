// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 100, Default: ""},
		{Name: "nickname", Type: field.TypeString, Size: 100, Default: ""},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 100},
		{Name: "phone_number", Type: field.TypeString, Unique: true, Size: 100},
		{Name: "photo_url", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "uid", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "api_key", Type: field.TypeString, Size: 255},
		{Name: "is_active", Type: field.TypeBool, Default: true},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
	}
	// GroupsColumns holds the columns for the "groups" table.
	GroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 100, Default: ""},
		{Name: "nickname", Type: field.TypeString, Size: 100, Default: ""},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 100},
		{Name: "phone_number", Type: field.TypeString, Unique: true, Size: 100},
		{Name: "photo_url", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "uid", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "group_code", Type: field.TypeString, Size: 24},
		{Name: "address", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "account_id", Type: field.TypeUUID},
	}
	// GroupsTable holds the schema information for the "groups" table.
	GroupsTable = &schema.Table{
		Name:       "groups",
		Columns:    GroupsColumns,
		PrimaryKey: []*schema.Column{GroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "groups_accounts_groups",
				Columns:    []*schema.Column{GroupsColumns[12]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 100, Default: ""},
		{Name: "nickname", Type: field.TypeString, Size: 100, Default: ""},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 100},
		{Name: "phone_number", Type: field.TypeString, Unique: true, Size: 100},
		{Name: "photo_url", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "uid", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "group_id", Type: field.TypeUUID},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_groups_users",
				Columns:    []*schema.Column{UsersColumns[10]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "user_email",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[3]},
			},
			{
				Name:    "user_uid",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[6]},
			},
			{
				Name:    "user_group_id",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[10]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		GroupsTable,
		UsersTable,
	}
)

func init() {
	GroupsTable.ForeignKeys[0].RefTable = AccountsTable
	UsersTable.ForeignKeys[0].RefTable = GroupsTable
}
